--- php-pecl-runkit-0.9/runkit_sandbox.c	2010-06-07 21:05:35.644361691 +0300
+++ php-pecl-runkit-0.9/runkit_sandbox.c	2010-06-07 21:10:00.650129685 +0300
@@ -803,7 +803,7 @@
 		member_copy = *member;
 		member = &member_copy;
 		zval_copy_ctor(member);
-		Z_SET_REFCOUNT(member, 1);
+		Z_SET_REFCOUNT(*member, 1);
 		convert_to_string(member);
 	}
 
@@ -877,7 +877,7 @@
 		member_copy = *member;
 		member = &member_copy;
 		zval_copy_ctor(member);
-		Z_SET_REFCOUNT(member, 1);
+		Z_SET_REFCOUNT(*member, 1);
 		convert_to_string(member);
 	}
 
@@ -1413,8 +1413,8 @@
 	if (objval->output_handler && return_value_used) {
 		*return_value = *objval->output_handler;
 		zval_copy_ctor(return_value);
-		Z_SET_REFCOUNT(return_value, 1);
-		Z_UNSET_ISREF(return_value);
+		Z_SET_REFCOUNT(*return_value, 1);
+		Z_UNSET_ISREF(*return_value);
 	} else {
 		RETVAL_FALSE;
 	}
@@ -1434,7 +1434,7 @@
 			MAKE_STD_ZVAL(cb);
 			*cb = *callback;
 			zval_copy_ctor(cb);
-			Z_SET_REFCOUNT(cb, 0);
+			Z_SET_REFCOUNT(*cb, 0);
 			Z_UNSET_ISREF_P(cb);
 		}
 		Z_ADDREF_P(cb);
@@ -1470,8 +1470,8 @@
 \
 	ALLOC_ZVAL(retval); \
 	ZVAL_BOOL(retval, objval->name); \
-	Z_SET_REFCOUNT(retval, 0); \
-	Z_UNSET_ISREF(retval); \
+	Z_SET_REFCOUNT(*retval, 0); \
+	Z_UNSET_ISREF(*retval); \
 \
 	return retval; \
 }
@@ -1513,7 +1513,7 @@
 	} else {
 		ZVAL_LONG(retval, objval->parent_scope);
 	}
-	Z_SET_REFCOUNT(retval, 0);
+	Z_SET_REFCOUNT(*retval, 0);
 
 	return retval;
 }
@@ -1619,7 +1619,7 @@
 		member_copy = *member;
 		member = &member_copy;
 		zval_copy_ctor(member);
-		Z_SET_REFCOUNT(member, 1);
+		Z_SET_REFCOUNT(*member, 1);
 		convert_to_string(member);
 	}
 
@@ -1655,7 +1655,7 @@
 		member_copy = *member;
 		member = &member_copy;
 		zval_copy_ctor(member);
-		Z_SET_REFCOUNT(member, 1);
+		Z_SET_REFCOUNT(*member, 1);
 		convert_to_string(member);
 	}
 
@@ -1691,7 +1691,7 @@
 		member_copy = *member;
 		member = &member_copy;
 		zval_copy_ctor(member);
-		Z_SET_REFCOUNT(member, 1);
+		Z_SET_REFCOUNT(*member, 1);
 		convert_to_string(member);
 	}
 
